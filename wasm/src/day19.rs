use itertools::Itertools;
use std::collections::HashMap;
use std::collections::HashSet;
use std::vec::Vec;

fn eucledian_distance(a: &Vec<isize>, b: &Vec<isize>) -> isize {
  a.iter().zip(b).map(|(a, b)| (b - a).pow(2)).sum()
}

struct Scanner {
  name: String,
  values: Vec<Vec<isize>>,
}

impl Scanner {
  fn get_distance_graph(&self) -> Vec<Vec<isize>> {
    self
      .values
      .iter()
      .enumerate()
      .map(|(i, value_x)| {
        self
          .values
          .iter()
          .enumerate()
          .filter_map(|(j, value_y)| {
            if i == j {
              None
            } else {
              Some(eucledian_distance(value_x, value_y))
            }
          })
          .collect()
      })
      .collect()
  }
}

pub fn main(s: &str, second: bool) -> usize {
  let scanners: Vec<Scanner> = s
    .split_terminator("\n\n")
    .map(|scanner_lines| {
      let mut lines_it = scanner_lines.split_terminator("\n");
      let first_line = lines_it.next().expect("there should be a first line");
      let values = lines_it
        .map(|line| {
          line
            .split(",")
            .map(|elem| elem.parse::<isize>().unwrap())
            .collect::<Vec<_>>()
        })
        .collect::<Vec<_>>();
      Scanner {
        name: first_line.to_string(),
        values,
      }
    })
    .collect();
  // scanners.iter().for_each(|scanner| {
  //   println!("Scanner {}", scanner.name);
  //   println!("{:?}", scanner.get_distance_graph());
  // });
  let mut pairs = HashMap::<(usize, usize), HashSet<(usize, usize)>>::new();
  for ((i, scanner_a), (j, scanner_b)) in
    itertools::iproduct!(scanners.iter().enumerate(), scanners.iter().enumerate())
  {
    if i == j {
      continue;
    }
    let scanner_a_dgraph = scanner_a.get_distance_graph();
    let scanner_b_dgraph = scanner_b.get_distance_graph();
    for ((edge_a_index, edge_a), (edge_b_index, edge_b)) in itertools::iproduct!(
      scanner_a_dgraph.iter().enumerate(),
      scanner_b_dgraph.iter().enumerate()
    ) {
      let hash_a = HashSet::<isize>::from_iter(edge_a.iter().cloned());
      let hash_b = HashSet::from_iter(edge_b.iter().cloned());
      // println!("Hash a {:?}", hash_a);
      // panic!("crash");
      let intersect = hash_a.intersection(&hash_b).collect::<HashSet<_>>();
      if 11 <= intersect.len() {
        // println!(" # {} {} Intersect {}", i, j, intersect.len());
        if i < j {
          // pairs.insert((i, j));
          pairs
            .entry((i, j))
            .or_insert(HashSet::new())
            .insert((edge_a_index, edge_b_index));
        }
      }
    }

    // let scanner_a_set = scanner_a
    //   .get_distance_graph()
    //   .into_iter()
    //   .flatten()
    //   .collect::<HashSet<_>>();

    // let scanner_b_set = scanner_b
    //   .get_distance_graph()
    //   .into_iter()
    //   .flatten()
    //   .collect::<HashSet<_>>();

    // let intersect = scanner_a_set
    //   .intersection(&scanner_b_set)
    //   .collect::<HashSet<_>>();

    // let length = intersect.len();
    // if 12 <= length && i != j {
    //   println!("Intersect {} {} {}", i, j, length);
  }

  println!("Pairs {:?}", pairs);

  scanners
    .iter()
    .map(|scanner| scanner.values.len())
    .sum::<usize>()
    - pairs.len() * 12
}

#[cfg(test)]
mod tests {
  static TEST_INPUT: &str = "--- scanner 0 ---\n404,-588,-901\n528,-643,409\n-838,591,734\n390,-675,-793\n-537,-823,-458\n-485,-357,347\n-345,-311,381\n-661,-816,-575\n-876,649,763\n-618,-824,-621\n553,345,-567\n474,580,667\n-447,-329,318\n-584,868,-557\n544,-627,-890\n564,392,-477\n455,729,728\n-892,524,684\n-689,845,-530\n423,-701,434\n7,-33,-71\n630,319,-379\n443,580,662\n-789,900,-551\n459,-707,401\n\n--- scanner 1 ---\n686,422,578\n605,423,415\n515,917,-361\n-336,658,858\n95,138,22\n-476,619,847\n-340,-569,-846\n567,-361,727\n-460,603,-452\n669,-402,600\n729,430,532\n-500,-761,534\n-322,571,750\n-466,-666,-811\n-429,-592,574\n-355,545,-477\n703,-491,-529\n-328,-685,520\n413,935,-424\n-391,539,-444\n586,-435,557\n-364,-763,-893\n807,-499,-711\n755,-354,-619\n553,889,-390\n\n--- scanner 2 ---\n649,640,665\n682,-795,504\n-784,533,-524\n-644,584,-595\n-588,-843,648\n-30,6,44\n-674,560,763\n500,723,-460\n609,671,-379\n-555,-800,653\n-675,-892,-343\n697,-426,-610\n578,704,681\n493,664,-388\n-671,-858,530\n-667,343,800\n571,-461,-707\n-138,-166,112\n-889,563,-600\n646,-828,498\n640,759,510\n-630,509,768\n-681,-892,-333\n673,-379,-804\n-742,-814,-386\n577,-820,562\n\n--- scanner 3 ---\n-589,542,597\n605,-692,669\n-500,565,-823\n-660,373,557\n-458,-679,-417\n-488,449,543\n-626,468,-788\n338,-750,-386\n528,-832,-391\n562,-778,733\n-938,-730,414\n543,643,-506\n-524,371,-870\n407,773,750\n-104,29,83\n378,-903,-323\n-778,-728,485\n426,699,580\n-438,-605,-362\n-469,-447,-387\n509,732,623\n647,635,-688\n-868,-804,481\n614,-800,639\n595,780,-596\n\n--- scanner 4 ---\n727,592,562\n-293,-554,779\n441,611,-461\n-714,465,-776\n-743,427,-804\n-660,-479,-426\n832,-632,460\n927,-485,-438\n408,393,-506\n466,436,-512\n110,16,151\n-258,-428,682\n-393,719,612\n-211,-452,876\n808,-476,-593\n-575,615,604\n-485,667,467\n-680,325,-822\n-627,-443,-432\n872,-547,-609\n833,512,582\n807,604,487\n839,-516,451\n891,-625,532\n-652,-548,-490\n30,-46,-14\n";
  static PUZZLE_INPUT: &str = "--- scanner 0 ---\n878,-830,-633\n-654,579,583\n-297,520,-671\n-288,418,-607\n927,-707,-599\n834,-770,492\n65,-56,25\n662,392,-584\n-635,672,759\n-286,-837,-550\n943,-732,-680\n868,-851,577\n845,-735,422\n757,441,-546\n417,377,639\n-422,-920,-556\n-379,503,-529\n-358,-887,-535\n-557,695,590\n-469,-715,623\n421,350,460\n727,244,-543\n-524,-657,716\n530,386,541\n-516,-654,485\n\n--- scanner 1 ---\n-576,568,-812\n657,415,-415\n697,-697,-764\n-768,-701,-757\n133,21,23\n660,-634,-685\n531,764,612\n-693,-514,675\n625,435,-393\n-505,429,-811\n-732,-827,-754\n-751,-553,759\n585,424,-332\n406,869,566\n-345,414,781\n-452,446,-773\n437,881,577\n-667,-527,862\n592,-509,865\n572,-544,667\n796,-712,-731\n-466,394,764\n-793,-859,-721\n-424,469,687\n546,-522,796\n\n--- scanner 2 ---\n496,419,871\n517,-648,-341\n-373,-342,699\n610,-470,865\n-405,433,-478\n635,-489,683\n591,-554,-342\n-523,457,-377\n480,382,833\n-383,339,809\n796,849,-470\n576,-541,-376\n-529,382,821\n-359,-444,565\n-657,-489,-782\n-660,462,-493\n-701,-484,-738\n-444,333,689\n736,800,-551\n440,430,856\n-749,-542,-720\n628,771,-522\n-84,45,31\n-354,-473,697\n655,-447,812\n\n--- scanner 3 ---\n-585,-799,-407\n-8,3,-15\n-352,263,-798\n648,-897,-545\n807,594,858\n949,398,-473\n-550,462,970\n939,-728,848\n923,450,-605\n-370,-983,687\n-320,-899,708\n-678,-623,-426\n-701,-792,-504\n134,-80,61\n-425,479,834\n651,-666,-537\n906,-869,727\n906,647,784\n-301,457,941\n709,-759,-592\n-338,-971,589\n-326,308,-768\n-271,271,-719\n957,-780,619\n905,310,-592\n902,471,898\n\n--- scanner 4 ---\n-344,-650,707\n-19,-55,-144\n-475,295,231\n-790,471,-694\n634,400,-574\n-387,-696,643\n526,-976,-868\n737,-562,293\n-362,-790,-599\n649,528,271\n783,305,-610\n-348,-610,641\n827,579,241\n649,-550,431\n20,-194,-1\n-548,230,315\n726,671,262\n-513,246,239\n699,-549,494\n601,-874,-967\n621,381,-566\n600,-977,-919\n-756,576,-753\n-389,-745,-695\n-411,-777,-544\n-712,472,-707\n\n--- scanner 5 ---\n-736,-631,547\n489,543,-764\n-658,-613,524\n-765,344,314\n474,-482,585\n-588,530,-365\n-589,305,-401\n443,401,516\n376,-573,506\n594,481,-777\n-688,-591,744\n-519,362,-375\n-728,347,358\n442,-612,670\n-657,447,279\n434,-736,-722\n645,623,-783\n-13,-133,-116\n-758,-472,-812\n-651,-534,-759\n-805,-505,-654\n418,-677,-730\n407,437,584\n-149,-18,22\n485,-643,-827\n272,461,520\n\n--- scanner 6 ---\n457,-689,-751\n394,-366,777\n7,-79,-26\n-346,-410,-447\n492,343,394\n64,50,92\n-432,487,345\n328,-665,-703\n329,-753,-802\n-568,-783,674\n-347,611,-432\n-361,477,-330\n508,305,431\n-628,-604,616\n-504,-588,665\n452,320,442\n-425,-374,-325\n667,364,-435\n-465,-527,-427\n647,493,-477\n391,-438,763\n-517,355,394\n345,-455,661\n-371,367,351\n622,311,-458\n-342,479,-461\n\n--- scanner 7 ---\n240,-368,494\n553,641,-895\n-844,-774,775\n-158,152,27\n604,463,-925\n-808,-665,694\n257,746,637\n-582,876,794\n-564,874,680\n295,-496,433\n502,-255,-850\n-524,591,-672\n336,-262,-791\n-887,-673,-732\n496,-283,-694\n276,755,723\n233,780,826\n-537,896,707\n-16,-5,-83\n-869,-640,-763\n292,-328,445\n-525,641,-735\n-817,-778,596\n-959,-707,-833\n-537,553,-873\n696,564,-904\n\n--- scanner 8 ---\n-138,-81,-56\n441,422,-748\n-613,-753,-567\n-711,-766,-679\n471,430,517\n469,-785,640\n-736,-746,-682\n-467,333,-521\n-837,485,476\n574,-437,-615\n-838,-845,533\n436,232,537\n454,235,-722\n630,-503,-471\n-869,-867,440\n-875,-814,670\n449,301,491\n-942,531,351\n-487,316,-400\n477,-764,674\n480,338,-806\n569,-466,-398\n-954,520,382\n-542,410,-479\n539,-822,685\n\n--- scanner 9 ---\n467,-625,-603\n-669,564,-709\n-847,-826,-623\n652,-665,691\n-836,-756,-658\n555,-658,807\n-738,641,-734\n-640,530,-730\n-532,-707,498\n467,444,-799\n261,397,458\n-419,-609,489\n-490,820,347\n522,-532,-545\n454,584,-817\n-557,750,437\n586,532,-843\n-870,-671,-739\n514,-763,-542\n-524,719,419\n-98,20,18\n-423,-788,462\n340,405,377\n291,442,432\n633,-489,784\n\n--- scanner 10 ---\n716,-305,-787\n837,-330,-928\n888,-497,410\n-835,-736,-589\n-726,396,-816\n105,27,-108\n-269,644,397\n-783,-776,-540\n-719,467,-739\n-739,-842,696\n-8,-46,23\n683,628,-464\n-579,-821,599\n-354,666,310\n393,435,700\n912,-501,603\n714,514,-397\n810,-320,-849\n487,494,578\n-339,704,339\n895,-524,455\n-704,404,-846\n424,551,688\n-780,-608,-528\n692,689,-364\n-573,-849,755\n\n--- scanner 11 ---\n-324,527,757\n608,-702,-558\n429,818,379\n582,-495,715\n-341,737,-607\n-796,-621,820\n-880,-642,770\n-868,-740,802\n597,-658,-369\n-453,503,805\n572,409,-620\n560,-388,839\n565,-359,590\n-483,-797,-347\n536,-739,-501\n-390,826,-723\n-387,754,-709\n508,604,-611\n-41,-143,24\n-418,-868,-393\n-325,439,856\n36,43,-57\n469,665,481\n350,782,501\n-394,-779,-323\n632,588,-562\n\n--- scanner 12 ---\n-866,-426,-688\n486,-659,807\n-935,-385,-780\n-686,-505,394\n662,-480,-583\n816,333,564\n534,365,-598\n-696,619,400\n767,325,526\n-694,783,523\n757,-516,-732\n391,356,-675\n-924,-312,-703\n-50,27,6\n591,-600,841\n590,-613,763\n-723,-341,410\n483,335,-776\n-424,345,-345\n-685,728,577\n681,-472,-570\n-557,-447,419\n832,409,599\n-370,343,-406\n-382,333,-397\n\n--- scanner 13 ---\n-578,-856,613\n-609,-874,646\n744,-939,-717\n473,-481,439\n-508,-946,680\n792,-836,-716\n391,419,-696\n-38,-154,-175\n499,-592,313\n-550,349,235\n-491,515,228\n-416,617,-490\n382,488,294\n399,438,-683\n-437,709,-591\n435,343,-534\n-105,-7,-65\n475,517,354\n-647,509,256\n-606,-512,-668\n-669,-511,-618\n362,514,220\n693,-938,-791\n-446,566,-668\n-468,-524,-580\n556,-552,297\n\n--- scanner 14 ---\n-757,815,582\n-2,58,9\n-515,-401,595\n-371,445,-483\n637,752,-662\n8,-94,-131\n723,-646,-779\n-582,817,681\n655,514,402\n-453,-455,594\n-442,-349,665\n-521,-349,-553\n-393,472,-510\n-487,-325,-364\n616,678,468\n615,532,-632\n746,593,500\n-391,490,-396\n585,-819,511\n597,555,-710\n-512,-368,-467\n492,-714,460\n551,-722,444\n756,-804,-732\n-696,826,735\n694,-751,-625\n\n--- scanner 15 ---\n-643,847,-354\n-766,752,-394\n757,394,440\n799,-393,-663\n-538,-714,742\n-634,-605,-282\n-165,88,-1\n-819,851,-468\n-629,-356,-311\n727,-375,-544\n256,-339,516\n-419,-694,859\n749,586,347\n811,-425,-565\n-498,-816,895\n255,-438,604\n697,851,-525\n556,884,-404\n788,442,416\n-651,-480,-418\n-923,489,752\n-970,419,912\n608,902,-633\n-894,449,783\n-49,-39,90\n384,-390,580\n\n--- scanner 16 ---\n469,-678,693\n-644,-431,470\n-57,-144,57\n392,324,928\n553,371,-753\n-875,-821,-277\n432,-606,750\n-621,243,-576\n-606,-460,455\n-906,725,820\n-682,343,-567\n-759,-809,-308\n481,-761,-382\n382,-776,-415\n-816,-699,-371\n-914,695,842\n593,360,-814\n374,413,904\n-159,-10,163\n-796,276,-598\n-666,-518,385\n513,-667,882\n303,348,858\n518,-698,-461\n-843,618,835\n521,351,-731\n\n--- scanner 17 ---\n353,635,-713\n-771,-279,699\n-474,769,499\n-701,714,-588\n-643,-334,760\n-361,778,597\n-305,-533,-323\n-323,-424,-408\n432,-395,549\n-74,22,-27\n691,483,717\n-811,-331,748\n708,-667,-556\n-671,911,-585\n369,-410,442\n361,-388,472\n-606,763,-626\n-365,805,418\n710,576,541\n435,652,-571\n-385,-573,-325\n344,737,-649\n682,-849,-596\n739,-711,-666\n613,460,548\n\n--- scanner 18 ---\n630,-778,-377\n-642,806,-657\n404,849,-563\n-504,-789,-498\n-659,778,-635\n34,-62,148\n347,-484,785\n-420,405,665\n-457,478,604\n384,813,754\n-718,-667,757\n468,755,793\n263,852,-712\n-776,-678,695\n653,-822,-405\n476,-510,763\n-608,-880,-588\n256,827,-572\n278,-530,798\n-133,7,20\n-451,-884,-500\n-739,-633,765\n-391,622,660\n-640,591,-646\n281,729,780\n520,-823,-410\n\n--- scanner 19 ---\n-957,587,417\n711,-510,-899\n-500,835,-796\n348,583,-720\n778,798,343\n464,486,-727\n-414,-471,-425\n499,-891,534\n679,-608,-911\n-25,-50,-79\n723,847,380\n-872,565,330\n729,-629,-827\n-438,-453,-514\n-484,-382,-449\n-522,827,-826\n-507,764,-719\n-146,50,47\n-592,-511,505\n371,505,-551\n697,877,335\n-887,527,359\n-649,-548,577\n-460,-592,566\n748,-862,529\n624,-755,551\n\n--- scanner 20 ---\n-970,-446,-402\n660,-629,-380\n598,-630,-326\n-988,-361,-511\n417,-770,901\n601,432,-293\n-622,-623,933\n-592,-626,736\n-908,-363,-551\n-932,559,800\n592,518,-274\n-138,98,149\n-144,-53,-3\n-687,-664,785\n722,361,565\n626,329,-250\n-650,722,-312\n-522,661,-257\n356,-617,890\n-819,461,791\n531,-716,892\n671,-700,-274\n720,475,547\n742,448,520\n-928,380,827\n-482,710,-309\n\n--- scanner 21 ---\n-877,509,-750\n-613,-482,651\n442,-680,-742\n361,600,630\n-67,40,98\n-831,444,-821\n-901,420,-732\n841,456,-531\n-662,-606,635\n758,447,-603\n416,-669,822\n400,478,506\n419,-795,786\n362,461,559\n-617,367,784\n452,-827,847\n-666,-582,-655\n-515,413,801\n57,6,-81\n488,-602,-606\n-855,-571,-611\n-501,416,873\n-604,-546,456\n780,467,-571\n409,-665,-643\n-723,-510,-692\n\n--- scanner 22 ---\n-11,-95,-104\n-767,-537,-778\n-624,512,-512\n877,487,-759\n-686,495,624\n595,-590,329\n-607,370,-430\n-837,-531,-869\n609,-637,320\n-709,434,-421\n551,-611,-783\n602,-649,242\n695,527,-785\n-400,-664,553\n-883,498,594\n739,417,-816\n-517,-652,414\n-735,457,529\n688,-605,-694\n561,760,228\n-841,-389,-778\n-389,-727,337\n601,758,308\n671,-574,-878\n452,675,246\n\n--- scanner 23 ---\n843,466,-900\n825,-466,237\n-918,-519,-987\n823,-405,291\n835,504,-949\n833,-836,-616\n835,-457,249\n-59,-106,-149\n-710,351,663\n-729,-553,-963\n385,463,561\n549,340,563\n-815,-544,-944\n-503,691,-666\n-732,450,730\n-539,-683,472\n812,-735,-524\n803,-658,-667\n759,539,-965\n-546,-553,598\n-619,-530,502\n-657,662,-561\n-626,394,776\n440,517,552\n-550,724,-508\n\n--- scanner 24 ---\n-80,-88,-25\n-862,-445,-663\n803,-429,-392\n396,465,-685\n-847,-416,-625\n833,-844,438\n682,683,480\n-421,422,649\n-462,-802,883\n46,30,75\n-418,434,817\n-628,-861,890\n-366,483,777\n373,634,-607\n743,-774,505\n748,-466,-343\n-482,633,-426\n722,-421,-313\n718,764,371\n691,585,367\n-497,740,-363\n-475,710,-355\n761,-743,472\n-622,-705,862\n489,641,-704\n-932,-503,-603\n\n--- scanner 25 ---\n-711,-795,292\n820,713,-588\n682,725,-676\n780,291,672\n-448,-881,-583\n524,-765,493\n-489,-819,-650\n710,381,605\n494,-400,-461\n-423,-863,-611\n-828,406,739\n-796,-714,326\n-649,433,743\n-733,686,-909\n-866,-679,315\n-760,713,-931\n-847,668,-911\n-747,442,630\n425,-473,-488\n490,-786,522\n679,363,638\n601,-790,424\n573,-463,-414\n619,726,-626\n-3,-97,-140\n";
  #[test]
  fn day19_works_first() {
    let res = super::main(TEST_INPUT, false);
    assert_eq!(res, 79);
  }

  #[test]
  fn day19_works_real_first() {
    let res = super::main(PUZZLE_INPUT, false);
    assert_eq!(res, 79);
  }

  #[test]
  fn day19_works_second() {
    let res = super::main(TEST_INPUT, true);
    assert_eq!(res, 5);
  }
}
